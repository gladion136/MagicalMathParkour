[gd_scene load_steps=6 format=2]

[ext_resource path="res://scenes/ingame/GUI.tscn" type="PackedScene" id=1]
[ext_resource path="res://level/01_01_Linear_Intro.tscn" type="PackedScene" id=2]
[ext_resource path="res://scenes/InGame.gd" type="Script" id=3]
[ext_resource path="res://scripts/Camera.gd" type="Script" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends CanvasItem

const COORDINATE_SYSTEM_SIZE = 50 # * axis_scale

const axis_label_length = 10

const axis_scale = 50

enum MODE {
	LINEAR,
	QUAD,
	SIN,
	EMPTY
}

var coordinate_system_center = Vector2.ZERO
var current_mode = MODE.LINEAR
var a = 0
var b = 0
var c = 0
var d = 0

func _ready():
	pass


func draw_linear(a, b):
	current_mode = MODE.LINEAR
	self.a = -a
	self.b = -b * axis_scale
	update()

func draw_quad(a, b, c):
	current_mode = MODE.QUAD
	self.a = -float(a)
	self.b = -b * axis_scale
	self.c = -c * axis_scale
	update()


func draw_sin(a, b, c, d):
	current_mode = MODE.SIN
	self.a = a
	self.b = b
	self.c = -c * axis_scale
	self.d = -d * axis_scale
	update()


func _draw():
	match current_mode:
		MODE.LINEAR:
			for i in range(get_viewport_rect().size.x):
				draw_line(Vector2(i, a*(i-coordinate_system_center.x)+b+coordinate_system_center.y), Vector2((i+1), a*((i-coordinate_system_center.x)+1)+b+coordinate_system_center.y), ColorN(\"slateblue\"), 2)
		MODE.QUAD:
			for i in range(get_viewport_rect().size.x):
				var x = float(i-coordinate_system_center.x+b)/(get_viewport_rect().size.x/axis_scale)*3
				var x_1 = float(i-coordinate_system_center.x+1+b)/(get_viewport_rect().size.x/axis_scale)*3
				var y = (a*(x)*(x)+c+coordinate_system_center.y)
				var y_1 = (a*(x_1)*(x_1)+c+coordinate_system_center.y)
				draw_line(Vector2(i, y), Vector2(i+1, y_1), ColorN(\"slateblue\"), 2)
				#draw_line(Vector2(i, a*(((i-margin_left)+b)*((i-margin_left)+b))+margin_top), Vector2((i+1), a*(((i-margin_left+1)+b)*((i-margin_left+1)+b)+1)+margin_top), ColorN(\"slateblue\"), 1)
		MODE.SIN:
			for i in range(get_viewport_rect().size.x):
				draw_line(Vector2(i, a*sin(b*2*PI*(i+coordinate_system_center.x)+c)+d+coordinate_system_center.y), Vector2((i+0.5), a*sin(b*2*PI*(i-coordinate_system_center.x+0.5)+c)+d+coordinate_system_center.y), ColorN(\"slateblue\"), 2)
	_draw_axis()


func _draw_axis():
	# x line
	draw_line(Vector2(-COORDINATE_SYSTEM_SIZE * axis_scale + coordinate_system_center.x, coordinate_system_center.y), Vector2(COORDINATE_SYSTEM_SIZE * axis_scale + coordinate_system_center.x, coordinate_system_center.y), ColorN(\"slateblue\"), 2)
	
	# y line
	draw_line(Vector2(coordinate_system_center.x, COORDINATE_SYSTEM_SIZE * axis_scale + coordinate_system_center.y), Vector2(coordinate_system_center.x, -COORDINATE_SYSTEM_SIZE * axis_scale + coordinate_system_center.y), ColorN(\"slateblue\"), 2)
	
	# x
	for i in range(-COORDINATE_SYSTEM_SIZE, COORDINATE_SYSTEM_SIZE):
		draw_line(Vector2(axis_scale * i + coordinate_system_center.x, coordinate_system_center.y - axis_label_length), Vector2(axis_scale * i + coordinate_system_center.x, coordinate_system_center.y + axis_label_length), ColorN(\"slateblue\"), 2)
	
	# y
	for i in range(-COORDINATE_SYSTEM_SIZE, COORDINATE_SYSTEM_SIZE):
		draw_line(Vector2(coordinate_system_center.x - axis_label_length, axis_scale * i + coordinate_system_center.y), Vector2(coordinate_system_center.x + axis_label_length, axis_scale * i + coordinate_system_center.y), ColorN(\"slateblue\"), 2)
"

[node name="InGame" type="Node"]
script = ExtResource( 3 )

[node name="Island" type="Node2D" parent="."]

[node name="Level" parent="Island" instance=ExtResource( 2 )]

[node name="FunctionPreview" type="Node2D" parent="."]
script = SubResource( 1 )

[node name="GUI" parent="." instance=ExtResource( 1 )]

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2( 393.54, 259.91 )
current = true
limit_top = -1000000000
script = ExtResource( 4 )
